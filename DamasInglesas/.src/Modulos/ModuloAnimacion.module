' Gambas module file

'****************************************************************************************************************
'animacion del tablero....
'****************************************************************************************************************
Public Sub animacion(area As DrawingArea, tablero As Classboard, listaMovimientos As ClassMovimiento[])
  'por cada movimimiento hacer con un retardo de 20 milesegundo traslado de la pieza...

  ' Dim contador As Integer
  Dim nuevaexplosion As ClassExplosion
  Dim movimiento As ClassMovimiento
  Dim copiatablero As New Classboard(8)
  Dim jugadaUnica As New Classmovelist
  'hago una copia del tablero para ejecutar los cambios en el...
  copiatablero.copia(tablero)
  For Each movimiento In listaMovimientos
    traslada(area, copiatablero, movimiento)
    jugadaUnica = New Classmovelist
    jugadaUnica.movimiento.Add(movimiento)
    If copiatablero.tablero[movimiento.x1, Movimiento.y1] <> 0 Then
      'crear una explosion
      nuevaexplosion = New ClassExplosion
      nuevaexplosion.nueva(movimiento.x1, Movimiento.y1, FMain.recorridoExplosion.count)
      FMain.ArrayExplosiones.Add(nuevaexplosion)
      Try Exec ["play", "/tmp/explosion.wav"] 'hace ruido de colocar pieza...
    Endif
    copiatablero = ModuloCalculos.MakeMove(copiatablero, jugadaUnica, False)

    area.Refresh

  Next

End

Private Sub traslada(area As DrawingArea, tablero As Classboard, Movimiento As ClassMovimiento)

  Dim incrementox As Single, incrementoy As Single, ax As Single, ay As Single

  Dim a As Integer
  'determinar direccion de a trasladar...
  If (movimiento.x0 - movimiento.x1) > 0 Then
    incrementox = -0.05
  Else
    incrementox = +0.05
  Endif

  If (movimiento.y0 - movimiento.y1) > 0 Then
    incrementoy = -0.05
  Else
    incrementoy = 0.05
  Endif
  ax = 0
  ay = 0
  For a = 0 To 17
    ax += incrementox
    ay += incrementoy

    tablero.displayboard(area,, movimiento.x0, movimiento.y0, ax, ay)
    area.Refresh
    Wait 0.02

  Next

End
